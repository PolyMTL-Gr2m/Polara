#!/bin/bash
# Copyright 2018 ETH Zurich and University of Bologna.
# Copyright and related rights are licensed under the Solderpad Hardware
# License, Version 0.51 (the "License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
# or agreed to in writing, software, hardware and materials distributed under
# this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.
#
# Author: Michael Schaffner <schaffner@iis.ee.ethz.ch>, ETH Zurich
# Date: 15.08.2018
# Description: compilation script for rv64 targets
#
# The first argument is the path to the c program to be compiled, 
# second argument can be used to pass additional arguments to GCC.

#----------------------------------------------------------
#                          Configs
#----------------------------------------------------------
RISCV_XLEN=64
RISCV_ARCH=rv${RISCV_XLEN}gcv
RISCV_ABI=lp64d
RISCV_TARGET=riscv${RISCV_XLEN}-unknown-elf
#----------------------------------------------------------
#                          LLVM Flags
#----------------------------------------------------------
LLVM_FLAGS="-march=rv64gcv_zfh_zvfh0p1 -menable-experimental-extensions -mabi=${RISCV_ABI} -mno-relax -fuse-ld=lld"
LLVM_V_FLAGS="-fno-vectorize -scalable-vectorization=off -mllvm -riscv-v-vector-bits-min=0 -Xclang -target-feature -Xclang +no-optimized-zero-stride-load"
RISCV_LDFLAGS="-static -nostartfiles -lm -Wl,--gc-sections -T ${DV_ROOT}/verif/diag/assembly/include/riscv/ariane/link.ld"
#----------------------------------------------------------
#                          Build
#----------------------------------------------------------
RISCV_V_LLVM="${RISCV_V_LLVM_PATH}/bin/clang"
RISCV_LINK_OPTS="-nostdlib ${RISCV_LDFLAGS} ${LLVM_FLAGS} -DDEFINE_MALLOC -DDEFINE_REALLOC -DDEFINE_FREE -Werror-implicit-function-declaration -fno-math-errno -Wl,-Map=diag.map"

RISCV_V_LLVM_OPTS="-DPREALLOCATE=1 -mcmodel=medany -std=gnu99 -O2 -fno-common -fno-builtin-printf $2  -DPITON_NUMTILES=${PITON_NUM_TILES}"
INCS="-I${DV_ROOT}/verif/diag/assembly/include/riscv/ariane"
ARA_INCS="-I${DV_ROOT}/design/chip/tile/ara/apps/riscv-tests/isa/macros/vector"


${RISCV_V_LLVM} ${INCS} ${ARA_INCS} ${RISCV_V_LLVM_OPTS} -o diag.exe $1            \
             ${DV_ROOT}/verif/diag/assembly/include/riscv/ariane/syscalls.c  \
             ${DV_ROOT}/verif/diag/assembly/include/riscv/ariane/crt.S       \
             ${RISCV_LINK_OPTS}

riscv64-unknown-elf-objdump -D diag.exe > diag.objdump